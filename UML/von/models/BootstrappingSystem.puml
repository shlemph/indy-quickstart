@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

title VON Connector Bootstrap and Startup Cycle



box "Sovrin" #LightBlue
  participant "Ledger" as Ledger
  actor "Trust Anchor" as TA
endbox

participant "Agent" as Ag
participant "Prover" as P

=== BOOTSTRAP - from ZERO to HERO ==
note over Ledger, Ag
We are starting from a clean node set. No data exist yet
endnote


note over Ledger, Ag
Trust Anchor is Establishing itself
Creates itself if this network is a clean start.
endnote
TA -> Ledger: Look up own nym <agent-nym-lookup>
alt Nym Exists case
  Ledger -> TA: returns <agent-nym>
else Nym not present case
  TA --[#blue]> Ledger: <agent-nym-send>
  Ledger --[#blue]> TA: returns <agent-nym>
end

TA -> Ledger: Look up EndAttr <agent-endpoint-lookup>
alt End Attribution Exists
  Ledger -> TA: returns <agent-endpoint>
else Endpoint Attribution does NOT exist
  TA --[#blue]> Ledger: <agent-endpoint-send>
  Ledger --[#blue]> TA: returns <agent-endpoint>
end


note over Ledger, Ag
Agents are bootstrapping/confirming presence
Creates itself if this network is a clean start.
endnote
Ag -> Ledger: Look up own nym <agent-nym-lookup>
alt Nym Exists case
  Ledger -> Ag: returns <agent-nym>
else Nym not present case
  Ag --[#blue]> TA: <agent-nym-send>
  TA --[#blue]> Ledger: <agent-nym-send>
  Ledger --[#blue]> Ag: returns <agent-nym>
end

Ag -> Ledger: Look up own Agent Endpoints <agent-endpoint-lookup>
alt Agent Endpoint Attributes Exist
  Ledger -> TA: returns <agent-endpoint>
else Endpoint Attribution does NOT exist
  Ag --[#blue]> TA: <agent-endpoint-send>
    TA --[#blue]> Ledger: <agent-endpoint-send>
    Ledger --[#blue]> TA: returns <agent-endpoint>
    TA --[#blue]> Ag: returns <agent-endpoint>
end
note over Ag, P
  Each Prover needs to set a Master Key.
endnote
P -> Ag: Bootstrap My Master Secret
activate Ag
Ag -> P: Create Master Secret
destroy Ag
P -> P: Store Master Secret

note over Ledger, P

endnote
@enduml